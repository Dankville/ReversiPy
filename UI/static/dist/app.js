SPA.GameModule=(e=>{"use strict";let a,o,t,n,l,s,i,r,d=[];a=(a,o,c)=>{r=o,n=c,t=a;for(let e=0;e<n.length;e++)d.push([]);s=e('<div id="row-info">'),i=e('<div id="col-info">'),l=e('<div id="reversi-board">'),n.forEach((a,o)=>{const t=o+1;e(s).append('<div class="row-info-cell"> <span>'+t+"</span> </div>"),a.forEach((a,s)=>{const i=r[s],c=n[o][s],u=e('<div data-row="'+t+'" data-col="'+i+'" data-played='+c+' class="reversi-field"></div>');0!=c&&u.append(p()),d[o].push(u),e(l).append(u)})}),r.forEach(a=>{e(i).append('<div class="col-info-cell">'+a+"</div>")}),e(t).append(s),e(t).append(l),e(t).append(i)},o=e=>{let a=0;e.forEach(e=>{let o=0;e.forEach(e=>{const t=e,l=n[a][o];t!=l&&(0==l&&d[a][o].append(p()),d[a][o].attr("data-played",t)),o++}),a++}),n=e};let p=()=>e('<div class="fiche"></div>');return{init:a,updateGrid:o,test:()=>{console.log("test")}}})($),SPA.ResponseModule=(e=>{"use strict";let a,o,t,n,l,s="http://localhost:5001";return a=(a,o,t,n)=>new Promise((l,i)=>e.ajax({url:s+"/api/Spel/Zet",method:"PUT",data:JSON.stringify({moveType:a,col:o,row:t,playerToken:n}),success:e=>{l(e)},failed:e=>{i("failed")}})),o=(a=0)=>new Promise((o,t)=>e.ajax(s+"/api/Spel/"+a,{success:e=>{o(e)},failed:e=>{t("failed")}})),t=()=>new Promise((a,o)=>e.ajax(s+"/api/Spel/GetPlayerToken",{method:"GET",success:e=>{a(e)},failed:e=>{o("failed")}})),n=a=>new Promise((o,t)=>e.ajax(s+"/api/Spel/JoinGame/"+a,{method:"GET",success:e=>{o(e)},failed:e=>{t("failed")}})),l=(e,a)=>{new EventSource(s+"/api/Spel/Event/"+e).onmessage=e=>{if("1"!=e.data){let o=e.data.split("'")[1],t=JSON.parse(o);a(t)}}},{move:a,getGameInfo:o,getPlayerToken:t,joinGame:n,subscribe:l}})($);const SPA=(e=>{"use strict";let a,o,t,n;a=a=>{o=e(a);let r=SPA.ResponseModule.getPlayerToken,d=SPA.ResponseModule.joinGame;r().then(e=>(n=e.playerToken,n)).then(e=>d(e)).then(a=>{const n=a.gameColumns,s=a.gameGrid;a.gameToken;e("#Title").append(-1==a.playerColor?" (b)":" (w)"),t=e('<div id="reversi-board-container">'),o.append(t),SPA.GameModule.init(t,n,s);const r=e(t).find(".reversi-field");e(r).on("click",a=>{let o=e(a.target).data();l(o.col,o.row)}),i(),e("#splash-container").css("display","none")}).catch(e=>console.error(new Error(e)));let p=e('<input type="button" value="log data from test game" >');e(p).on("click",(function(){s(0)}));let c=e('<input type="button" value="Surrender>"');e(c).on("click",()=>{}),o.append(p)};let l=(e,a)=>new Promise((o,t)=>{SPA.ResponseModule.move(0,e,a,n).catch(()=>{alert("something went wrong.")})}),s=e=>new Promise((a,o)=>{let t=SPA.ResponseModule.getGameInfo(e);Promise.all([t]).then(e=>{console.log(e)}).catch(()=>{alert("something went wrong")})}),i=()=>{SPA.ResponseModule.subscribe(n,SPA.GameModule.updateGrid)};return{init:a}})($);